/*
 *  created on 09-Jul-2021 
 */
 
 model proposal (0.2) "A model to represent an application for observing time. The model is intended to express all 
of the concepts required to specify the scientific parameters of the application in sufficient detail to allow the 
proposal to be reviewed and allocated time. It does not cover all the technical detail of instrument setup that would be needed to actually schedule the 
observations, although the intention is that information about targets etc. could be automatically transferred to an observing system."
 author "Paul Harrison"
 
 include "alt-std/IVOA-v1.0.vodsl" // this is an edited version of the standard to include identifiers.
 include "alt-std/STC_coords-v1.0.vodsl" // this is also edited to include some extra concrete point types.
 
 enum ProposalKind  //IMPL -is this universal enough to be an enum?
 {
 	Standard "Normal proposal",
 	ToO "target of opportunity",
 	Survey "Part of a large programme" 	
 }
 
 otype Organization
 {
 	name: ivoa:string "The name of the organization";
 	address : ivoa:string "";
 	ivoid : ivoa:ivorn @? "the registry identifier for the organization"; 	// IMPL perhaps do this more
 }
 
 otype Observatory -> Organization {
 	
 	telescopes : Telescope @+ as composition "the telescopes that the observatory controls";
 	instruments : Instrument @+ as composition "the instruments that are available for the telescopes";
 	backends : Backend @+ as composition "the backends that exist";
 	arrays: TelescopeArray @* as composition "any arrays of telescopes that typically operate together";
 	
 }
 
 otype Telescope {
 	name : ivoa:string "telescope name";
 	location : coords:GeocentricPoint "the location of the telescope" ;
 }
 
 otype TelescopeArrayMember "" {
 	telescope references Telescope "";
 }
 
 otype TelescopeArray "a set of telescopes that are operated together for an observation" { // IMPL might not be necessary with ObservingConfiguration doing the same sort of thing.
 	name : ivoa:string "the array name";
    arrayMembers: TelescopeArrayMember @+ as composition "the telescopes that make up the array"; 	
 }
 
 
 enum InstrumentKind {
 	continuum,
 	spectroscopic
 }
 
 otype Instrument "An instrument that can be attached to a telescope - e.g. CCD, Radio Receiver"{
 	name : ivoa:string "the instrument name";
 	kind : InstrumentKind "the kind of instrument";
 	frequencyCoverage : SpectralWindowSetup as composition "the frequency range that the instrument covers";
 }
 
 otype Backend "a processing backend /pipeline- e.g. correlator" {
 	name : ivoa:string "the backend name"; 	
 	parallel : ivoa:boolean "is capable of being run at same time as other backends";
 	
 }
 
 otype ObservingConfiguration "A particular observation combination that is possible" {
 	telescope references Telescope "";
 	instrument references Instrument "";
 	backend references Backend "";
 }
 
 otype ObservingMode "a collection of configs that can be chosen to observe with." {
 	name : ivoa:string "";
 	description: ivoa:string "";
 	configurations : ObservingConfiguration @+ as composition "";
 }
  
 otype Person "person connected with the proposal" {
 	fullName : ivoa:string "";
 	eMail : ivoa:string "";
 	homeInstitute references Organization "";
 }
 
 
 enum InvestigatorKind {
 	PI "principal investigator",
 	COI "co-investigator"
 }
 
 otype Investigator { // note that the key that is the surrogate key for this object would be a good candidate for an anonymous key
 	investigator references Person "the investigator";
 	type : InvestigatorKind "the investigator type";
 }
 
 otype ObservingProposal "a complete proposal"
 {
 	title: ivoa:string   "the proposal title" ;
    code: ivoa:string iskey  "a code that can be used to refer to the proposal" ;
    summary: ivoa:string   "a short summary/abstract of the proposal" ;
    investigators: Investigator @+ as composition  "the person(s) making the proposal";
    kind : ProposalKind "the type of proposal";
    relatedProposals: RelatedProposal @* as composition "";
    dateSubmitted : ivoa:datetime "date that the proposal is submitted";
    supportingDocuments: SupportingDocument @* as composition "any additional documents";
    observations : Observation @+ as composition "the proposed observations";
 }
 
 otype RelatedProposal "a related proposal" // note that this is being done to follow the vodml aggregation pattern
 {
 	proposal references ObservingProposal "the related proposal" ;
 	//IMPL could also put information about the type of relationship
 }
 
 otype SupportingDocument "a document" {
 	title : ivoa:string "document title";
 	location : ivoa:anyURI "location of document";//IMPL might want this in-line
 }
 
 
 abstract otype Field  "Definition of an observing field pointing"
  {   
        name: ivoa:string   "" ;
        
  }
  
  otype TargetField -> Field "the field points to the associated target"
  {
  	
  }
  
  otype Point -> Field "Single point on the sky" {
  	  centre: coords:Point   "" ;
  }
  
  otype Polygon  -> Field  "Polygonal map"
  {   
        points: coords:EquatorialPoint   @*   "an array of points...." ; 
  }
  
  otype Ellipse  -> Field "Specialization of a Field for an elliptical map."
  {   
        semiMajor: ivoa:RealQuantity   "" ;
        semiMinor: ivoa:RealQuantity   "" ;
        pAMajor: ivoa:RealQuantity   "" ;
  }
  
  
  abstract otype Constraint "a form of constraint on the observation" {
  	
  }
  
  abstract otype TimingConstraint -> Constraint  "Any specific timing requirements for the observing"
  {   
        note: ivoa:string  @?   "" ;
        isAvoidConstraint: ivoa:boolean  @?   "" ;
  }
  
  otype TimingWindow -> TimingConstraint "particular time range"
  {
        startTime: ivoa:datetime  @?   "" ;
        endTime: ivoa:datetime  @?   "" ;
  }
 
 otype SimultaneityConstraint -> TimingConstraint "A constraint that requires that two observations occur simultaneously"
 {
 	
 }
  
  otype ScienceSpectralWindow  "A spectral window for science use."
  {   
        index: ivoa:integer   "" ;
        spectralWindowSetup: SpectralWindowSetup  @?   as composition  "" ;
        expectedSpectralLine: ExpectedSpectralLine  @*   as composition  "" ;
  }
 
  otype SpectralWindowSetup  "Science oriented definition of a spectral window."
  {   
        start: ivoa:RealQuantity   "The start of the spectral window" ;
        end: ivoa:RealQuantity    "The end of the spectral window" ;
        spectralResolution: ivoa:RealQuantity @?  "channel width" ; //IMPL would like this to be optional, but cannot have optional embedded in JPA - if resolution not important then set same as width.
        isSkyFrequency: ivoa:boolean   "represents an observed frequency" ;
        polarization: coords:PolStateEnum  "desired polarization"; //FIXME - in general the STC polstate enum is not enough - how to say L circular for instance. - also do want multiple pol states in same window defn.
   }  
 
  
  otype ExpectedSpectralLine  "Brief description of a spectral line."
  {   
        restFrequency: ivoa:RealQuantity   "" ;
        transition: ivoa:string @?  "" ;
        splatalogId: ivoa:stringIdentifier   "" ; // IMPL is VAMDC more client friendly?
        description: ivoa:string   "" ;
  }
  
 
  
  abstract otype Target "A target source" {
     sourceName: ivoa:string   "" ;
  	
  }
  
  otype CelestialTarget -> Target  "The basic target setup for a celestial Target."
  {   //most of these source parameters should be in an ivoa source model.
        sourceCoordinates: coords:EquatorialPoint   "" ;
        positionEpoch : coords:Epoch "the epoch at which the position was measured";
        pmRA: ivoa:RealQuantity @?  "" ;
        pmDec: ivoa:RealQuantity @?  "" ;
        parallax: ivoa:RealQuantity @? "" ;
        sourceVelocity: ivoa:RealQuantity @?   "" ;
 }
 
 otype SolarSystemTarget -> Target ""
 {
 	// needs ephemeris data.
 }
  
 otype PerformanceParameters "The parameters required for observation to be useful for the science goal" 
 {
 	desiredAngularResolution: ivoa:RealQuantity @?  "";
 	desiredLargestScale:  ivoa:RealQuantity @?  "";
 	desiredSensitivity:  ivoa:RealQuantity @?  "";
 	desiredDynamicRange:  ivoa:RealQuantity @?  "";  //TODO sensitivity or dynamic range?
 	representativeFreq: ivoa:RealQuantity "the frequency at which these pertain";
 }
 
 abstract otype Observation "" {
 	target references  Target  "The actual target of the observation";
 	field references Field "";
 	tech references TechnicalGoal "";
 	constraints: Constraint @* as composition "";
 }
 
 otype TargetObservation -> Observation "an observation of the scientific target "{
 }
 
 otype CalibrationObservation -> Observation "an observation that is intended for calibration"{
 	intent : CalibrationTarget_intendedUse "";
 }
 
 enum CalibrationTarget_intendedUse  "" //should this be an enum
{
Amplitude  "" ,
Atmospheric  "" ,
Bandpass  "" ,
Phase  "" ,
Pointing  "" ,
Focus  "" ,
Polarization  "" ,
Delay  "" 
}
 
 
 otype TechnicalGoal "collects together the technical goals of the proposal" {
 	performance : PerformanceParameters as composition "";
 	spectrum: ScienceSpectralWindow @+ as composition "";
 	
 }
 